function X = getMEPoints(N)
%getMEPoints Reads the Minimum Energy points on the surface of the sphere
%from the files generated by Rob Womersley
%(http://web.maths.unsw.edu.au/~rsw/)

%   This method is a little messy because the filenames have zero-padding.
%   Might be cleaner to pad a string with 0s, but this works.

%   Caveats:  if N>99, only N=100,127,128,191 are actually defined.  This
%   function will automatically round down to the appropriate N.

Np1sq = (N+1)*(N+1);

if N < 10
    % i.e., N = 1,2
    if Np1sq < 10
        X = load(sprintf('..\\me\\me0%d.000%d',N,(N+1)*(N+1)));
    % N = 3,4,5,6,7,8
    elseif Np1sq < 100
        X = load(sprintf('..\\me\\me0%d.00%d',N,(N+1)*(N+1)));
    % N = 9
    else
        X = load(sprintf('..\\me\\me0%d.0%d',N,(N+1)*(N+1)));
    end

elseif N < 100
    % i.e., N is in [10,30]
    if Np1sq < 1000
        X = load(sprintf('..\\me\\me%d.0%d',N,(N+1)*(N+1)));
    % N = N is in [31, 98], is = 99 or 100 (no more 0s to pad with!)
    else
        X = load(sprintf('..\\me\\me%d.%d',N,(N+1)*(N+1)));
    end

% Above N=99, the generated distributions include only:
% N = 100, N = 127, N = 128, N = 191
else
    if N < 127
        N = 100;
    elseif N < 191
        N = 128;
    else
        N = 191;
    end
    X = load(sprintf('..\\me\\me%d.%d',N,(N+1)*(N+1)));
end


end

